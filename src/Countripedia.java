import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;
import country.Country;
import internet_manager.ApiHandler;
import java.awt.event.ItemListener;
import java.io.IOException;
import javax.swing.event.ListSelectionListener;

class CountryNames {
    String name;
}

public class Countripedia extends javax.swing.JFrame {
    javax.swing.DefaultListModel<String> model;
    CountryNames[] nameList;
    String[] names;
    /**
     * Creates new form Countripedia
     */
    public Countripedia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        countryList = new javax.swing.JList<>();
        searchBar = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        countryInfo = new javax.swing.JTextArea();
        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));

        model = new javax.swing.DefaultListModel<String>();
        countryList.setModel(model);
        countryList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        countryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                countryListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(countryList);

        searchBar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchBarCaretUpdate(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        countryInfo.setEditable(false);
        countryInfo.setColumns(20);
        countryInfo.setRows(5);
        countryInfo.setAutoscrolls(false);
        jScrollPane3.setViewportView(countryInfo);

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setName("countryListLabel"); // NOI18N
        label1.setText("A list of Countries");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchBar)
                        .addGap(14, 14, 14)
                        .addComponent(searchBtn))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtn))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String capitalize(String sample) {
        String capitalized = "";
        switch(sample.length()) {
            case 1:
                capitalized = sample.toUpperCase();
                break;
                
            case 0:
                break;
                
            default:
                capitalized = sample.substring(0, 1).toUpperCase() + sample.substring(1);
                break;
        }
        
        return capitalized;
    }
		
		
		// Function called when the search bar has its text updated while the user types
    private void searchBarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchBarCaretUpdate
        String searchVal = capitalize(searchBar.getText());
        model = filterModel(searchVal);
        countryList.setModel(model);
    }//GEN-LAST:event_searchBarCaretUpdate

		// called when action button is pressed
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        countryInfo.setText("Loading...");
        String countryName = searchBar.getText();
        try {
            ApiHandler x = new ApiHandler("https://restcountries.eu/rest/v2/name/" + countryName.replace(" ", "%20")+ "?fullText=true");
            String output = x.generateGetResponse();
            Gson parser = new Gson();
            Country[] result = parser.fromJson(output, Country[].class);
            countryInfo.setText(result[0].toString());
        } catch(IOException | JsonSyntaxException e) {
            countryInfo.setText("Information about " + countryName + " not found");
        }
    }//GEN-LAST:event_searchBtnActionPerformed

		// called when selection is made
    private void countryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_countryListValueChanged
        if(!evt.getValueIsAdjusting()) {
            String selectedCountry = countryList.getSelectedValue();
            searchBar.setText(selectedCountry);
        }
    }//GEN-LAST:event_countryListValueChanged

		// this filters out the contents of the model based on the filter which is the search key value
    private javax.swing.DefaultListModel filterModel(String filter) {
        javax.swing.DefaultListModel<String> model1 = new javax.swing.DefaultListModel<>();
        for (String name : names) {
            if (name.startsWith(filter)) {
                model1.add(model1.getSize(), name);
            }
        }
        return model1;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Countripedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Countripedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Countripedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Countripedia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Countripedia gui = new Countripedia();
                gui.setVisible(true);
                try {
                    gui.nameList = new Gson().fromJson(new ApiHandler("https://restcountries.eu/rest/v2/all/?fields=name").generateGetResponse(),
					CountryNames[].class);
                } catch(IOException | JsonSyntaxException e) {
                    System.err.println(e);
                }
                gui.names = new String[gui.nameList.length];
                for(int i = 0; i < gui.nameList.length; i++) {
                    gui.names[i] = gui.nameList[i].name;
                    gui.model.addElement(gui.names[i]);
                }                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea countryInfo;
    private javax.swing.JList<String> countryList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.Label label1;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables
}
